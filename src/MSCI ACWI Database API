import requests
import pandas as pd
import yfinance as yf
from io import BytesIO

from numpy.ma.core import append

# URL of the CSV file
url = "https://www.ishares.com/us/products/239600/ishares-msci-acwi-etf/1467271812596.ajax?fileType=csv&fileName=ACWI_holdings&dataType=fund"

# Send a GET request to download the file
response = requests.get(url)

# Check if the request was successful
if response.status_code == 200:
    # Save the CSV file to disk (optional)
    with open('ACWI_holdings.csv', 'wb') as f:
        f.write(response.content)

    # Load the content into a Pandas DataFrame
    file_content = BytesIO(response.content)

    # Read the CSV file into a DataFrame, specifying that the headers are on row 10 (0-indexed: row 9)
    df = pd.read_csv(file_content, header=9)

    # Filter the rows where the 'Asset Class' column is equal to 'Equity'
    df_filtered = df[df['Asset Class'] == 'Equity']

    # Select the first two columns (Ticker and Name)
    df_filtered = df_filtered.iloc[:, [0, 1]]  # Assuming first column is ticker, second is name
    print(df_filtered['Ticker'])
    # Function to retrieve ISIN for a given ticker or name using yfinance
    counter = 0
    def get_isin(ticker):
        global counter
        counter += 1  # Increment the counter with each iteration
        print(counter)
        try:
            # Ensure ticker is a string and clean special characters
            ticker = str(ticker)

            # Fetch stock info using yfinance
            stock = yf.Ticker(ticker)
            info = stock.get_isin()  # Attempt to fetch ISIN

            # If no ISIN is found, return 'NA'
            if info.replace(" ", "") is "-":
                return "NA"
            print("Yes")
            return info  # Return ISIN if available
        except Exception as e:
            # In case of error (e.g., no ISIN available), return 'NA'
            return "NA"

    # Create a new column for ISIN by applying the get_isin function on the 'Ticker' column
    global failed_tickers
    df_filtered['ISIN'] = df_filtered['Ticker'].apply(get_isin)

    # Save the filtered data with ISIN to a new CSV file
    df_filtered.to_csv('ACWI_filtered_with_ISIN.csv', index=False)

    # Print the first few rows to verify the data
    print("Filtered data with ISIN has been saved. Here's a preview:")
    print(df_filtered.head())

else:
    print("Failed to download the file. Status code:", response.status_code)


